import NDK, {
    NDKEvent,
    NDKPrivateKeySigner,
    type NDKUserProfile,
    type NostrEvent,
} from '@nostr-dev-kit/ndk';
import CryptoJS from 'crypto-js';
import createDebug from 'debug';

const debug = createDebug('signet:profile');

const PROFILE_RELAYS = [
    'wss://purplepag.es',
    'wss://relay.damus.io',
    'wss://relay.nostr.band',
    'wss://relay.primal.net',
    'wss://nost.lol',
];

function buildDefaultProfile(email?: string): NDKUserProfile {
    const profile: NDKUserProfile = {
        display_name: 'New Signet user',
        about: 'Autogenerated profile. Please customise it!',
        website: 'https://github.com/Letdown2491/signet',
        image: `https://robohash.org/${Math.random().toString(36).slice(2)}?set=set5`,
    };

    if (email) {
        const normalized = email.trim().toLowerCase();
        const hash = CryptoJS.MD5(normalized).toString(CryptoJS.enc.Hex);
        profile.image = `https://robohash.org/${hash}?gravatar=hashed&set=set5`;
    }

    return profile;
}

export async function createSkeletonProfile(
    signer: NDKPrivateKeySigner,
    profileOverrides?: Partial<NDKUserProfile>,
    email?: string
): Promise<void> {
    const profile = {
        ...buildDefaultProfile(email),
        ...profileOverrides,
    };

    const ndk = new NDK({
        explicitRelayUrls: PROFILE_RELAYS,
        signer,
    });

    await ndk.connect(2_500);
    const user = await signer.user();
    user.ndk = ndk;

    const profileEvent = new NDKEvent(ndk, {
        kind: 0,
        pubkey: user.pubkey,
        content: JSON.stringify(profile),
    } as NostrEvent);

    await profileEvent.sign(signer);
    const publishResult = await profileEvent.publish();
    debug(`Profile published to ${publishResult.size} relays`);

    const contactsEvent = new NDKEvent(ndk, {
        kind: 3,
        pubkey: user.pubkey,
        tags: [
            ['p', 'fa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52'],
            ['p', user.pubkey],
        ],
    } as NostrEvent);

    await contactsEvent.sign(signer);
    await contactsEvent.publish();

    const relaysEvent = new NDKEvent(ndk, {
        kind: 10002,
        pubkey: user.pubkey,
        tags: PROFILE_RELAYS.map((relay) => ['r', relay]),
    } as NostrEvent);

    await relaysEvent.sign(signer);
    await relaysEvent.publish();
}
